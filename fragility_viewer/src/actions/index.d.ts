import { Dispatch, AnalysesMetadata, Analysis, Dataset } from "../utils/flowtype";
export declare const GET_ANALYSES = "GET_ANALYSES";
export declare const RECEIVE_ANALYSES = "RECEIVE_ANALYSES";
export declare function receiveAnalyses(api: string, json: AnalysesMetadata): (dispatch: Dispatch) => void;
export declare const RECEIVE_ANALYSIS = "RECEIVE_ANALYSIS";
export declare function receiveAnalysis(api: string, json: Analysis): (dispatch: Dispatch) => void;
export declare const RECEIVE_DATASETS = "RECEIVE_DATASETS";
export declare function receiveDatasets(json: Dataset): (dispatch: Dispatch) => void;
export declare function fetchAnalyses(): (dispatch: Dispatch) => Promise<null>;
export declare function getAnalysisById(id: String): (dispatch: Dispatch) => Promise<null>;
export declare function fetchDatasets(): (dispatch: Dispatch) => Promise<null>;
export declare function loginHelper(username: any, password: any): Promise<any>;
export declare const LOGIN_ERROR = "LOGIN_ERROR";
export declare const SET_USER = "SET_USER";
export declare function login(username: any, password: any): (dispatch: Dispatch) => Promise<null>;
export declare const LOGOUT = "LOGOUT";
export declare function logout(): (dispatch: Dispatch) => null;
export declare const RECEIVE_EXECUTION_ID = "RECEIVE_WORKFLOW_ID";
export declare function receiveDatawolfResponse(json: any): (dispatch: Dispatch) => void;
export declare const RECEIVE_OUTPUT = "RECEIVE_OUTPUT";
export declare function getOutputDataset(executionId: String): (dispatch: Dispatch) => Promise<void>;
export declare function executeDatawolfWorkflowHelper(workflowid: any, creatorid: any, title: any, description: any, parameters: any, datasets: any): Promise<string>;
export declare function executeDatawolfWorkflow(workflowid: any, creatorid: any, title: any, description: any, parameters: any, datasets: any): (dispatch: Dispatch) => Promise<null>;
export declare function getHeader(): Headers;
